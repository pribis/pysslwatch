server {
   server_name ian.bellastationery.com;
  root   /home/ian/boxcar/trunk/;
  access_log  /home/ian/boxcar/logs/access.log  main;
  error_log /home/ian/boxcar/logs/error.log;
  client_max_body_size 0; 
  userid         on;
  userid_name    bxcp;
  userid_domain  ian.bellastationery.com;
  userid_path    /;
  userid_expires 365d;
#  userid_p3p     'policyref="/w3c/p3p.xml", CP="CUR ADM OUR NOR STA NID"';

   auth_basic     "Restricted";
   auth_basic_user_file auth/stage;

  keepalive_timeout 70;
#  ssl_certificate   /var/www/boxcar/ssl/bellafigura.com/wc_bellastationery.com.crt;
#  ssl_certificate_key     /var/www/boxcar/ssl/bellafigura.com/wc_bellastationery.com.key;


  location ^~ /chat {
      rewrite ^/chat(.*) https://chat.ian.bellastationery.com$1 permanent;
  }

  #  location /react/ {
  #    alias /home/ian/boxcar/trunk/react;
  #  }
  #

  location ~ ^/rest/(.*)$ {
     default_type application/json;
     rewrite ^.* /wp-content/plugins/boxcar-rest/request-handler.php;
     # error_page 404 = /wp-content/plugins/boxcar-rest/request-handler.php?$args;
   }


  location ~ /wp-login.php {
     # if they've visited the site before, they should have a uid cookie.                
     # this cookie does not exist here when the first request comes in.                  
     # this way we can segregate brute force login attempts from valid ones.             
     if ($http_cookie !~* "bxcp") {                                                      
        set $test "A";                                                                   
     }                                                                                   
     if ($request_method ~* "POST") {                                                    
        set $test "${test}B";                                                            
     }                                                                                   
                                                                                         
     # crazy workaround is a quick way to make two conditions...                         
     if ($test = "AB" ){                                                                 
        return 403;                                                                      
     }                                                                                   
                                                                                         
     fastcgi_pass            php8.3-fpm;                                                    
     fastcgi_keep_conn       on;                                                         
     fastcgi_index           index.php;                                                  
  }   

  ## WordPress network files
  location ~ ^/files/(.*)$ {

    # if we need to send this to an error_page, $1 is blank. but if we set a new variable, it survives intact.
    set $filereq $1;

    try_files /wp-content/blogs.dir/$blogid/files/$filereq?$args /wp-includes/ms-files.php?file=$filereq;
    expires 7d;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }

  # images and static resources
  location		~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate,proxy-revalidate";
  }



  #avoid php readfile()
  location ^~ /blogs.dir {
    internal;
    alias /var/www/boxcar/htdocs/wp-content/blogs.dir;
    access_log off;log_not_found off;expires max;
  }
        
  location ^~ /patterns {
    internal;
    alias /home/ian/boxcar/trunk/cache/patterns;
  }

  location ~ /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location ~ /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # script and style minification
  location ^~ /min/ {
    rewrite ^/min/ /wp-content/plugins/bwp-minify/min/?$args last;
  }

  location ^~ /doc/ {
    autoindex on;
  }

  location ~ /workspace/ {
    autoindex on;
  }

  #  # rest calls
  #  location ~ ^/rest/(.*)$ {
  #    default_type application/json;
  #    set $memcached_key rest-$scheme://$host$request_uri;
  #    set $memcached_request 1;
  #
  #    # exceptions                                                                                                                
  #    # avoid cache serve of POST/PUT/DELETE/PATCH requests
  #    if ($request_method = POST ) {
  #      set $memcached_request 0;
  #    }
  #    if ($request_method = PUT ) {
  #       set $memcached_request 0;
  #    }
  #    if ($request_method = DELETE) {
  #       set $memcached_request 0;
  #    }
  #    if ($request_method = PATCH) {
  #       set $memcached_request 0;
  #    }
  #
  #    if ( $memcached_request = 1) {
  #      add_header X-Cache-Engine "REST cache via nginx";
  #      memcached_pass memcached-servers;
  #     }
  #    if ( $memcached_request = 0 ){
  #     rewrite ^.* /wp-content/plugins/boxcar-rest/request-handler.php?$args;
  #    }
  #    error_page 404 = /wp-content/plugins/boxcar-rest/request-handler.php?$args;
  #
  #  }

#  location ~ ^/account/+. {
#    rewrite ^/account/(.*) /account/#$1 permanent;
#  }

  location ~ (\.php|php5-fpm-status) {
    fastcgi_pass            php8.3-fpm;
    fastcgi_keep_conn       on;
    fastcgi_index           index.php;

       set $app_origin 'http://localhost:5173';
        if ($request_method = 'OPTIONS') {
          add_header Access-Control-Allow-Origin $app_origin always;
          add_header Access-Control-Allow-Credentials true always;
          add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS always;
          add_header Access-Control-Allow-Headers DNT,X-CustomHeader,Authorization,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type always;

          add_header Access-Control-Max-Age 1728000;
          add_header Content-Type 'text/plain charset=UTF-8';
          return 204;
        }
        add_header Access-Control-Allow-Origin $app_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS always;
        add_header Access-Control-Allow-Headers DNT,X-CustomHeader,Authorization,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type always;


        #    add_header Access-Control-Allow-Credentials 'true';
        #    add_header Access-Control-Allow-Origin 'http://localhost:5173';
        #    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE' always;
        #    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        #    add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;
        #    add_header 'Access-Control-Max-Age' 86400 always;
        #
    if ($ssl_protocol != "") {
       rewrite ^/wp-activate.php http://$server_name/wp-activate.php?$args permanent;
    }
   # rewrite ^/photopolymer-supplies/letterpress-plates-steel.php /shop/category/photopolymer-sheets/steel-backed/ permanent;
  }

 location /http-bind/ {
    proxy_pass http://127.0.0.1:5280/http-bind/;
    proxy_buffering off;
    tcp_nodelay on;
  }


  # try to get result from memcached
  #  location @memcached {
  #    default_type text/html;
  #    set $memcached_key data-$scheme://$host$request_uri;
  #    set $memcached_request 1;
  #
  #    # exceptions
  #    # avoid cache serve of POST requests
  #    if ($request_method = POST ) {
  #      set $memcached_request 0;
  #    }
  #
  #    # avoid cache serve of wp-admin-like pages, starting with "wp-"
  #    if ( $uri ~ "/wp-" ) {
  #      set $memcached_request 0;
  #    }
  #
  #    # avoid cache serve of any URL with query strings
  #    if ( $args ) {
  #      set $memcached_request 0;
  #    }
  #
  #    # avoid cache for logged in users
  #    if ($http_cookie ~* "woocommerce_cart_|comment_author_|wordpressuser_|wp-postpass_|wordpress_logged_in_" ) {
  #        set $memcached_request 0;
  #    }
  #
  #      if ( $memcached_request = 1) {
  #        add_header X-Cache-Engine "WP-FFPC via nginx";
  #        memcached_pass memcached-servers;
  #        error_page 404 = @rewrites;
  #      }
  #
  #      # this means the page is not supposed to be cached (ie, has query string, user is logged in, etc)
  #      if ( $memcached_request = 0 ) {
  #        rewrite ^ /index.php last;
  #      }
  #    }
  #
  #  ## rewrite rules, for cache miss on a page that would normally be cached
  #  location @rewrites {
  #    rewrite ^ /index.php last;
  #  }



  ## FORCE SSL HERE
  if ($ssl_protocol = "") {
     ## I think WP is currently enforcing this okay. Will need to update when account page is updated.
  }

  location ^~ /client/{
     rewrite ^/client/(.*) /smock_client/$1 permanent;
  }

  # this is for all locations that didn't match any other location strings
  location / {
    # This is cool because no php is touched for static content. 
    # include the "?$args" part so non-default permalinks doesn't break when using query string
 


    proxy_set_header X-Forwarded-Host $http_host;
    try_files $uri $uri/ /index.php$is_args$args;
  }

    listen 443 ssl;
    http2 on; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.bxp.cc/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.bxp.cc/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot






}server {
    if ($host = ian.bellastationery.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen    80;
   server_name ian.bellastationery.com;
    return 404; # managed by Certbot


}
